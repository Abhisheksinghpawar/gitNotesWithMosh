Learning Git from Mosh Hamedani

https://www.youtube.com/watch?v=8JJ101D3knE&t=1201s

To know your git version
    git --version

To install git
    https://git-scm.com/

This command will tell the terminal window to wait untill we close the new VS code window
    git config --global core.editor "code --wait"

To open global settings file - if you run the previous command the terminal window will wait after this command
    git config --global -e

How to handle end of lines
    End of lines are handles differently by windows and Mac
    core.autocrlf - carriage return line feed

    windows - git config --global core.autocrlf true
    Mac - git config --global core.autocrlf input

To access git help

    This opens the browser page
    git config --help

    If you want to access only small tag help
    git config -h

To initialize git

    Create an empty folder (moon)
    git init

How git works - Basic workflow

    You have a project directory and a git repository (This is basically a hidden subdirectory in the same directory)
    Git has a special staging area or index - allows us to review before taking snapshot
    
Now create 2 files in the same folder (moon)
    file1.txt
    file2.txt

    git status

    The 2 file names will show up in red as they are not in staging area

    On branch master

    No commits yet

    Untracked files:
    (use "git add <file>..." to include in what will be committed)
            file1.txt
            file2.txt

    nothing added to commit but untracked files present (use "git add" to track)

To add files to staging area

    git add file1.txt
    git add *.txt - All files with txt extension 
    git add . - All files in folder recursively (you might not wanna add big log files)

    git status
    Now this file will come in green as they are in the staging area

    Now if you change the file1 and check git status, again the same file will be red
    This is because we have a different version in current directory with changes not commited to staging yet

    git add file1.txt
    Now all the files will be green

How to commit this snapshot to permanently store in our git repository

    git commit -m "Initial commit"
    here -m is for message

    git commit
    This command will open another file in your default editor which can be edited and saved
    As soon as you close your browser, the files will be commmitted

To know files in staging area

    git ls-files
    This is when you delete files from the repo but they still exist in the staging area

    git rm files1.txt
    This removes file from both staging area and the repository
    
Ignoring files

    When we do not want to include log files or binary files
    mkdir logs
    echo Hello > logs/dev.logs

    now if we do git status, this log file will be untracked by git
    We do not want to add this to the staging area as we don't want git to track this
    To prevent this we have to make a special file .gitignore and this should be in the root of your project

    echo logs/ > .gitignore
    This command will add /logs to the .gitignore file

    code .gitignore
    This will open the gitignore file in VScode, which will look like this

    /logs
    main.log - File to be ignored can be added like this
    *.log - Pattern can be added like this to be ignored

    Now if you do a git status then logs directory should not be tracked

    Add this .gitignore file to staging area
    git add .\.gitignore

    Commit your changes
    git commit -m "Add gitignore"

    #This is how you add comments to your gitignore file

How to get short status

    git status -s

    Output will be like this
    M file1.txt
    ?? file2.txt

    M  file1.txt - This means file1 is modified
    A  file2.txt - This means file2 is added to staging area

git diff --staged

    This command is to see the differences in the staging area and check what will be committed next time

How to get all the commit history

    git log
    git log --oneline
    git log --oneline --reverse

How to view a commit
    
    git show
    git show 8d4705b

Unstaging a file

    git restore --staged file2.txt
    git restore --staged .

How to discard local changes

    git clean - This will give a fatal error
    gir clean -fd - force, remove complete directory

Restoring a file to an earlier version

    git rm file1.txt - This will remove the file from both working directory and staging area

    git restore --source=HEAD~1 file1.txt